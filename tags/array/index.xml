<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Array on Ehlxr - A responsive and simple theme for Hugo</title>
    <link>/tags/array/</link>
    <description>Recent content in Array on Ehlxr - A responsive and simple theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Feb 2017 00:28:21 +0000</lastBuildDate>
    
	<atom:link href="/tags/array/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Array.isArray()</title>
      <link>/oh-my-js/02-array-es5/10-array.isarray/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/10-array.isarray/</guid>
      <description>描述 Array.isArray() 方法用于确定一个值是否为 Array 类型。 注意：Array.isArray() 方法只能由构造函数 Array 调用，而数组实例无法调用。 ps：严格判断 JavaScript 对象</description>
    </item>
    
    <item>
      <title>Array.of()</title>
      <link>/oh-my-js/03-array-es6/02-array.of/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/02-array.of/</guid>
      <description>描述 Array.of 方法用于将一组值转换为数组。基本可以用来替代 Array() 或者 new Array()，并且不存在由于参数不同而导致的重载。 参数 参数 描述 arguments 任意值，不限个数</description>
    </item>
    
    <item>
      <title>Array.prototype.concat()</title>
      <link>/oh-my-js/01-array-es3/01-array.concat/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/01-array.concat/</guid>
      <description>描述 方法 concat() 将创建并返回一个新数组，这个方法将所有参数都添加到新数组中。它并不修改原数组 。如果要进行 concat() 操作的参数是一个数组，那么添加的是数组中</description>
    </item>
    
    <item>
      <title>Array.prototype.every()</title>
      <link>/oh-my-js/02-array-es5/05-array.every/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/05-array.every/</guid>
      <description>描述 every() 方法对数组每一项运行给定函数 fn ，如果该函数对每一项都返回 true ，则 every() 方法返回 true，否则返回 false。 参数 参数 描述 fn function 类型，必需。数组</description>
    </item>
    
    <item>
      <title>Array.prototype.filter()</title>
      <link>/oh-my-js/02-array-es5/03-array.filter/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/03-array.filter/</guid>
      <description>filter: 过滤 描述 filter() 方法对数组中每一项运行给定函数 fn ,返回使该函数返回值为 true 的项组成的数组。 参数 参数 描述 fn function 类型，必需。数组中每个元素需要调用的函数</description>
    </item>
    
    <item>
      <title>Array.prototype.find()</title>
      <link>/oh-my-js/03-array-es6/04-array.find/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/04-array.find/</guid>
      <description>描述 find 方法用于找出第一个符合条件的数组元素。它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找到第一个返回值为 true 的元素，然后返回</description>
    </item>
    
    <item>
      <title>Array.prototype.forEach()</title>
      <link>/oh-my-js/02-array-es5/01-array.foreach/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/01-array.foreach/</guid>
      <description>描述 forEach() 方法对数组每一项运行给定函数 fn，无返回值。另外，还可以指定函数 fn 的上下文环境（this）。 参数 参数 描述 fn function 类型，必需。数组中每个元素</description>
    </item>
    
    <item>
      <title>Array.prototype.includes()</title>
      <link>/oh-my-js/03-array-es6/10-array.includes/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/10-array.includes/</guid>
      <description>判断数组中是否包含某个元素，我们通常这么做： var arr = [ 1, 2, 3 ] if (arr.indexOf(4) == -1) { console.log(&#39;不包含&#39;) } else { console.log(&#39;包</description>
    </item>
    
    <item>
      <title>Array.prototype.indexOf()</title>
      <link>/oh-my-js/02-array-es5/06-array.indexof/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/06-array.indexof/</guid>
      <description>描述 indexOf() 方法返回在数组中可以找到一个给定元素的第一个索引（使用全等操作符），如果不存在，则返回 -1 。 参数 参数 描述 searchElement 要查找的元素 fromIndex 可选。开始查找的</description>
    </item>
    
    <item>
      <title>Array.prototype.join()</title>
      <link>/oh-my-js/01-array-es3/02-array.join/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/02-array.join/</guid>
      <description>描述 所有的数组元素都被转化成字符串，再用一个分隔符将这些字符串连接起来。如果元素是 undefined 或者 null，则会被转换成空字符串。 参数 参数 描述 separator 可选。</description>
    </item>
    
    <item>
      <title>Array.prototype.lastIndexOf()</title>
      <link>/oh-my-js/02-array-es5/07-array.lastindexof/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/07-array.lastindexof/</guid>
      <description>描述 lastIndexOf() 方法返回在指定元素在数组中的最后一个的索引，如果不存在则返回 -1 。 查找方式为从数组的后面向前查找，从 fromIndex 处开始（使用全等操作符）。 参数 参数</description>
    </item>
    
    <item>
      <title>Array.prototype.map()</title>
      <link>/oh-my-js/02-array-es5/02-array.map/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/02-array.map/</guid>
      <description>map: 映射 描述 map() 方法对数组中每一项运行给定函数 callback ，返回值是每次 callback 函数调用的结果组成的数组。 另外可以指定函数 callback 的上下文环境（this）。 使用 map() 方法</description>
    </item>
    
    <item>
      <title>Array.prototype.pop()</title>
      <link>/oh-my-js/01-array-es3/04-array.pop/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/04-array.pop/</guid>
      <description>描述 从一个数组中删除并返回最后一个元素。（修改原数组） 参数 无 返回值 从数组中删除的元素（当数组为空时返回 undefined） 示例 var arr = [ 1, 2, 3</description>
    </item>
    
    <item>
      <title>Array.prototype.push()</title>
      <link>/oh-my-js/01-array-es3/03-array.push/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/03-array.push/</guid>
      <description>描述 将一个或多个元素添加到数组的末尾，并返回新数组的长度（对原数组进行修改） 参数 参数 描述 elementN 必需，个数为至少一个。被添加到数组末尾的元素。 返回</description>
    </item>
    
    <item>
      <title>Array.prototype.reduce()</title>
      <link>/oh-my-js/02-array-es5/08-array.reduce/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/08-array.reduce/</guid>
      <description>reduce: 减少，缩小。但是 reduce() 方法并无此含义，而是“迭代，递归”。 描述 reduce() 方法从左向右迭代数组所有项，构建一个最终返回的值。 reduce() 方法接收两个参数：一个在每</description>
    </item>
    
    <item>
      <title>Array.prototype.reduceRight()</title>
      <link>/oh-my-js/02-array-es5/09-array.reduceright/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/09-array.reduceright/</guid>
      <description>描述 reduceRight() 方法从右向左迭代数组所有项，构建一个最终返回的值。 reduceRight() 方法接收两个参数：一个在每一项上调用的函数和（可选）作为迭代基础的初始值。 参数 参数</description>
    </item>
    
    <item>
      <title>Array.prototype.reverse()</title>
      <link>/oh-my-js/01-array-es3/09-array.reverse/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/09-array.reverse/</guid>
      <description>描述 reverse() 方法用于颠倒数组中元素的顺序。（修改原数组） 参数 无 返回值 返回颠倒顺序后的数组。 示例 var numbers = [1, 2, 3, 4]; numbers.reverse(); console.log(numbers); // [4, 3, 2, 1]</description>
    </item>
    
    <item>
      <title>Array.prototype.shift()</title>
      <link>/oh-my-js/01-array-es3/05-array.shift/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/05-array.shift/</guid>
      <description>描述 从一个数组中删除并返回第一个元素。（修改原数组） 参数 无 返回值 从数组中删除的元素（当数组为空时返回 undefined） 示例 var arr = [ 1, 2, 3 ];</description>
    </item>
    
    <item>
      <title>Array.prototype.slice()</title>
      <link>/oh-my-js/01-array-es3/07-array.slice/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/07-array.slice/</guid>
      <description>描述 不修改原数组，只返回一个浅复制了原数组中的元素的一个新数组。原数组的元素会按照下述规则拷贝： 如果该元素是个对象引用（不是实际的对象）， slice</description>
    </item>
    
    <item>
      <title>Array.prototype.some()</title>
      <link>/oh-my-js/02-array-es5/04-array.some/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/02-array-es5/04-array.some/</guid>
      <description>描述 some() 方法对数组每一项运行给定函数 fn ，如果该函数对任意一项返回 true ，则 some() 方法返回 true，否则返回 false。 参数 参数 描述 fn function 类型，必需。数组</description>
    </item>
    
    <item>
      <title>Array.prototype.sort()</title>
      <link>/oh-my-js/01-array-es3/10-array.sort/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/10-array.sort/</guid>
      <description>描述 对数组的元素进行排序，并返回数组，默认排序顺序是根据字符串 Unicode 码点。（修改原数组） 为了实现排序，sort() 方法会调用每个数组项的 toString() 方法，</description>
    </item>
    
    <item>
      <title>Array.prototype.splice()</title>
      <link>/oh-my-js/01-array-es3/08-array.splice/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/08-array.splice/</guid>
      <description>描述 通过删除现有元素或者添加新元素来更改一个数组的内容 参数 start 指定修改的开始位置。如果超出了数组的长度，则从数组末尾开始添加内容，如果是负值，</description>
    </item>
    
    <item>
      <title>Array.prototype.unshift()</title>
      <link>/oh-my-js/01-array-es3/06-array.unshift/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/01-array-es3/06-array.unshift/</guid>
      <description>描述 将一个或多个元素添加到数组的开头，并返回新数组的长度。（修改原数组） 参数 参数 描述 elementN 必需，个数为至少一个。要添加到数组开头的元素 返回值 从数</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/01-array.from/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/01-array.from/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/03-array.copywithin/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/03-array.copywithin/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/05-array.findindex/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/05-array.findindex/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/06-array.fill/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/06-array.fill/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/07-array.entries/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/07-array.entries/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/08-array.keys/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/08-array.keys/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
    <item>
      <title>Array.prototype.xxx()</title>
      <link>/oh-my-js/03-array-es6/09-array.values/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/oh-my-js/03-array-es6/09-array.values/</guid>
      <description>描述 参数 参数 描述 xxx yyy 返回值 示例 模拟实现</description>
    </item>
    
  </channel>
</rss>