<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storage on Ehlxr - A responsive and simple theme for Hugo</title>
    <link>/tags/storage/</link>
    <description>Recent content in Storage on Ehlxr - A responsive and simple theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Nov 2017 20:20:53 +0000</lastBuildDate>
    
	<atom:link href="/tags/storage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vuex 状态持久化之vuex-persistedstate</title>
      <link>/2017/11/24/vuex-%E7%8A%B6%E6%80%81%E6%8C%81%E4%B9%85%E5%8C%96%E4%B9%8Bvuex-persistedstate/</link>
      <pubDate>Fri, 24 Nov 2017 20:20:53 +0000</pubDate>
      
      <guid>/2017/11/24/vuex-%E7%8A%B6%E6%80%81%E6%8C%81%E4%B9%85%E5%8C%96%E4%B9%8Bvuex-persistedstate/</guid>
      <description>安装 $ npm install vuex-persistedstate 使用 import createPersistedState from &amp;quot;vuex-persistedstate&amp;quot;; const store = new Vuex.Store({ // ... plugins: [createPersistedState()] }); API createPersistedState([options])：通过配置选项创建实例。 你可以通</description>
    </item>
    
    <item>
      <title>本地存储数据方案分析</title>
      <link>/2017/11/24/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 24 Nov 2017 20:20:53 +0000</pubDate>
      
      <guid>/2017/11/24/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E6%96%B9%E6%A1%88%E5%88%86%E6%9E%90/</guid>
      <description>浏览器本地存储 有时候为了存储一些数据，比如用户信息，需要用到浏览器的存储能力。 浏览器本地存储数据有三种方案：cookie、localStor</description>
    </item>
    
  </channel>
</rss>