<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regexp on Even - A super concise theme for Hugo</title>
    <link>/tags/regexp/</link>
    <description>Recent content in regexp on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Feb 2017 00:28:21 +0000</lastBuildDate>
    
	<atom:link href="/tags/regexp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Regexp.prototype.exec()</title>
      <link>/post/oh-my-js/06-regexp/03-regexp.exec/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/03-regexp.exec/</guid>
      <description>描述 在一个指定字符串中执行一个搜索匹配。返回一个数组或 null。 参数 参数 描述 string 必需。要匹配正则表达式的字符串。 返回值 如果匹配成功，exec(</description>
    </item>
    
    <item>
      <title>Regexp.prototype.test()</title>
      <link>/post/oh-my-js/06-regexp/02-regexp.test/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/02-regexp.test/</guid>
      <description>描述 检测字符串中是否含有与 regexp 相匹配的文本。 参数 参数 描述 string 必需。要检测的字符串 返回值 如果字符串 string 中含有与 regexp 匹配的文本，就返回 true，否则返回</description>
    </item>
    
    <item>
      <title>String.prototype.match()</title>
      <link>/post/oh-my-js/06-regexp/05-string.prototype.match/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/05-string.prototype.match/</guid>
      <description>描述 检测字符串中是否含有与 regexp 相匹配的文本。 如果正则表达式不包含 g 标志，则 match() 方法返回值和 RegExp.exec() 返回值是相同的。 如果正则表达式包含 g 标志，则返回一个</description>
    </item>
    
    <item>
      <title>String.prototype.replace()</title>
      <link>/post/oh-my-js/06-regexp/06-string.prototype.replace/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/06-string.prototype.replace/</guid>
      <description>描述 参数 参数 描述 regexp 必需。如果传入一个非正则表达式，则会使用 new RegExp() 将其隐式转换为正则表达式对象 返回值 见描述 示例 是否包含 g 的区别 1 2 3 4 5 6 7 8 9</description>
    </item>
    
    <item>
      <title>String.prototype.search()</title>
      <link>/post/oh-my-js/06-regexp/04-string.prototype.search/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/04-string.prototype.search/</guid>
      <description>描述 检测字符串中是否含有与 regexp 相匹配的文本。类似于 Regexp.prototype.test 方法。 参数 参数 描述 regexp 必需。如果传入一个非正则表达式，则会使用 new RegExp() 将其隐式转换为正则表达式对</description>
    </item>
    
    <item>
      <title>String.prototype.split()</title>
      <link>/post/oh-my-js/06-regexp/07-string.prototype.split/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/07-string.prototype.split/</guid>
      <description>描述 把一个字符串分割成一个数组。 它和 Array.prototype.join() 的操作是相反的。 参数 参数 描述 regexp 必需。如果传入一个非正则表达式，则会使用 new RegExp() 将其隐式转换为正则表达式对象</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>/post/oh-my-js/06-regexp/00-regexp/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/00-regexp/</guid>
      <description>正则表达式验证工具： https://regexper.com/ 创建正则表达式 构造函数 1 2 3 var reg1 = new RegExp(&amp;#39;a&amp;#39;); var reg2 = new RegExp(&amp;#39;[a-zA-Z]&amp;#39;, &amp;#39;gi&amp;#39;); var reg3 = new RegExp(/[a-zA-Z]/, &amp;#39;gi&amp;#39;); 字面量 1 var reg = /[a-zA-Z]/gi; 修饰符 修饰符 描述 i 执行对大小写不敏感的匹</description>
    </item>
    
    <item>
      <title>正则表达式使用案例</title>
      <link>/post/oh-my-js/06-regexp/100-regexp-demos/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/100-regexp-demos/</guid>
      <description>隐藏手机号码中间 4 位数字： 前三位数字：^(\d{3}) 中间 4 位数字：\d{4} 最后 4 位数字：(\d{4})$ 子表达式：() 中的内容是一个子表</description>
    </item>
    
    <item>
      <title>正则表达式的 lastIndex 属性</title>
      <link>/post/oh-my-js/06-regexp/01-regexp.lastindex/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/01-regexp.lastindex/</guid>
      <description>描述 在每个实例化的正则对象中，都存在一个 lastIndex 属性，初始值为 0 。 lastIndex 属性是进行正则匹配操作的开始的位置 如果正则表达式不带 g 标志，则 lastIndex 始终为 0。 如果</description>
    </item>
    
    <item>
      <title>正则表达式预查</title>
      <link>/post/oh-my-js/06-regexp/0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%A2%84%E6%9F%A5/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/06-regexp/0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%A2%84%E6%9F%A5/</guid>
      <description>预查格式 (?=pattern) 上代码 通俗点说，就是 预查不消耗字符串，仅仅是用来确认是否匹配成功。 1 2 3 4 5 6 var str = &amp;#34;abc&amp;#34;; var reg1 = /a(?=b)bc/; var reg2 = /a(b)bc/; console.log(reg1.test(str)); // true console.log(reg2.test(str)); // false reg1 中的预查 (?=b) 并没</description>
    </item>
    
  </channel>
</rss>