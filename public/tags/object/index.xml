<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>object on Even - A super concise theme for Hugo</title>
    <link>/tags/object/</link>
    <description>Recent content in object on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Feb 2017 00:28:21 +0000</lastBuildDate>
    
	<atom:link href="/tags/object/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Object.assign()</title>
      <link>/post/oh-my-js/05-object/05-object.assign/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/05-object.assign/</guid>
      <description>描述 ES6 引入 Object.assign 方法，它用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。 如果目标对象和源对象有同名属性</description>
    </item>
    
    <item>
      <title>Object.defineProperty()</title>
      <link>/post/oh-my-js/05-object/07-object.defineproperty/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/07-object.defineproperty/</guid>
      <description>用法 这个方法在一个对象上定义一个新属性，或者修改一个已经存在的属性。并返回这个对象。 1 Object.defineProperty(obj, prop, descriptor); obj: 目标对象 prop: 要操作的属性 descriptor: 要操作的属性所拥有的特</description>
    </item>
    
    <item>
      <title>Object.entries()</title>
      <link>/post/oh-my-js/05-object/04-object.entries/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/04-object.entries/</guid>
      <description>描述 ES6 引入 Object.entries 方法，它返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值对数组。 参数 参数 描述 obj Object 类型</description>
    </item>
    
    <item>
      <title>Object.is()</title>
      <link>/post/oh-my-js/05-object/06-object.is/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/06-object.is/</guid>
      <description>描述 ES6 引入 Object.assign 方法，它用于比较两个值是否严格相等。 相等运算符（==）会自动转换类型，严格相等运算符 NaN 不等于自身，而且 +0 等于 -0。 Object.is() 方法和严格相</description>
    </item>
    
    <item>
      <title>Object.keys()</title>
      <link>/post/oh-my-js/05-object/02-object.keys/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/02-object.keys/</guid>
      <description>描述 ES6 引入 Object.keys 方法，它返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键名。 参数 参数 描述 obj Object 类型，必需</description>
    </item>
    
    <item>
      <title>Object.prototype.hasOwnProperty()</title>
      <link>/post/oh-my-js/05-object/01-hasownproperty/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/01-hasownproperty/</guid>
      <description>描述 JavaScript 对象既可以有自己的属性，也可以从原型继承。通过 hasOwnProperty 可以区分继承属性和非继承属性。 参数 参数 描述 prop String 类型，必需。要检测的属性名 返回值 布尔值，</description>
    </item>
    
    <item>
      <title>Object.values()</title>
      <link>/post/oh-my-js/05-object/03-object.values/</link>
      <pubDate>Mon, 20 Feb 2017 00:28:21 +0000</pubDate>
      
      <guid>/post/oh-my-js/05-object/03-object.values/</guid>
      <description>描述 ES6 引入 Object.values 方法，它返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值 参数 参数 描述 obj Object 类型，必需。</description>
    </item>
    
  </channel>
</rss>